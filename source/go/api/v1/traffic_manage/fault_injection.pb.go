// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.3
// source: fault_injection.proto

package traffic_manage

import (
	_ "github.com/polarismesh/specification/source/go/api/v1/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FaultInjection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 规则所属服务以及命名空间
	Service   *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Namespace *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Revision  *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	// 开关
	Enabled *wrapperspb.BoolValue `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// 故障注入来源匹配规则，判断哪些流量需要故障注入
	Sources []*Source `protobuf:"bytes,5,rep,name=sources,proto3" json:"sources,omitempty"`
	// 延迟故障注入
	DelayFault *DelayFault `protobuf:"bytes,6,opt,name=delayFault,proto3" json:"delayFault,omitempty"`
	// 中断故障注入
	AbortFault *AbortFault             `protobuf:"bytes,7,opt,name=abortFault,proto3" json:"abortFault,omitempty"`
	Ctime      *wrapperspb.StringValue `protobuf:"bytes,20,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime      *wrapperspb.StringValue `protobuf:"bytes,21,opt,name=mtime,proto3" json:"mtime,omitempty"`
}

func (x *FaultInjection) Reset() {
	*x = FaultInjection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fault_injection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultInjection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultInjection) ProtoMessage() {}

func (x *FaultInjection) ProtoReflect() protoreflect.Message {
	mi := &file_fault_injection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultInjection.ProtoReflect.Descriptor instead.
func (*FaultInjection) Descriptor() ([]byte, []int) {
	return file_fault_injection_proto_rawDescGZIP(), []int{0}
}

func (x *FaultInjection) GetService() *wrapperspb.StringValue {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *FaultInjection) GetNamespace() *wrapperspb.StringValue {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *FaultInjection) GetRevision() *wrapperspb.StringValue {
	if x != nil {
		return x.Revision
	}
	return nil
}

func (x *FaultInjection) GetEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *FaultInjection) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *FaultInjection) GetDelayFault() *DelayFault {
	if x != nil {
		return x.DelayFault
	}
	return nil
}

func (x *FaultInjection) GetAbortFault() *AbortFault {
	if x != nil {
		return x.AbortFault
	}
	return nil
}

func (x *FaultInjection) GetCtime() *wrapperspb.StringValue {
	if x != nil {
		return x.Ctime
	}
	return nil
}

func (x *FaultInjection) GetMtime() *wrapperspb.StringValue {
	if x != nil {
		return x.Mtime
	}
	return nil
}

// delay fault injection
type DelayFault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelayPercent uint32 `protobuf:"varint,2,opt,name=delayPercent,proto3" json:"delayPercent,omitempty"`
	Delay        uint32 `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`
}

func (x *DelayFault) Reset() {
	*x = DelayFault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fault_injection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelayFault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayFault) ProtoMessage() {}

func (x *DelayFault) ProtoReflect() protoreflect.Message {
	mi := &file_fault_injection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayFault.ProtoReflect.Descriptor instead.
func (*DelayFault) Descriptor() ([]byte, []int) {
	return file_fault_injection_proto_rawDescGZIP(), []int{1}
}

func (x *DelayFault) GetDelayPercent() uint32 {
	if x != nil {
		return x.DelayPercent
	}
	return 0
}

func (x *DelayFault) GetDelay() uint32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

// delay fault injection
type AbortFault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbortPercent uint32 `protobuf:"varint,2,opt,name=abortPercent,proto3" json:"abortPercent,omitempty"`
	AbortCode    uint32 `protobuf:"varint,3,opt,name=abortCode,proto3" json:"abortCode,omitempty"`
}

func (x *AbortFault) Reset() {
	*x = AbortFault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fault_injection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbortFault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbortFault) ProtoMessage() {}

func (x *AbortFault) ProtoReflect() protoreflect.Message {
	mi := &file_fault_injection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbortFault.ProtoReflect.Descriptor instead.
func (*AbortFault) Descriptor() ([]byte, []int) {
	return file_fault_injection_proto_rawDescGZIP(), []int{2}
}

func (x *AbortFault) GetAbortPercent() uint32 {
	if x != nil {
		return x.AbortPercent
	}
	return 0
}

func (x *AbortFault) GetAbortCode() uint32 {
	if x != nil {
		return x.AbortCode
	}
	return 0
}

var File_fault_injection_proto protoreflect.FileDescriptor

var file_fault_injection_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe2, 0x03, 0x0a, 0x0e, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x2e, 0x0a, 0x0a, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x0a, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x32, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x63, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x46, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22,
	0x4e, 0x0a, 0x0a, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x42,
	0x94, 0x01, 0x0a, 0x37, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x42, 0x13, 0x46, 0x61, 0x75,
	0x6c, 0x74, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6c,
	0x61, 0x72, 0x69, 0x73, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x67, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fault_injection_proto_rawDescOnce sync.Once
	file_fault_injection_proto_rawDescData = file_fault_injection_proto_rawDesc
)

func file_fault_injection_proto_rawDescGZIP() []byte {
	file_fault_injection_proto_rawDescOnce.Do(func() {
		file_fault_injection_proto_rawDescData = protoimpl.X.CompressGZIP(file_fault_injection_proto_rawDescData)
	})
	return file_fault_injection_proto_rawDescData
}

var file_fault_injection_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_fault_injection_proto_goTypes = []interface{}{
	(*FaultInjection)(nil),         // 0: v1.FaultInjection
	(*DelayFault)(nil),             // 1: v1.DelayFault
	(*AbortFault)(nil),             // 2: v1.AbortFault
	(*wrapperspb.StringValue)(nil), // 3: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),   // 4: google.protobuf.BoolValue
	(*Source)(nil),                 // 5: v1.Source
}
var file_fault_injection_proto_depIdxs = []int32{
	3, // 0: v1.FaultInjection.service:type_name -> google.protobuf.StringValue
	3, // 1: v1.FaultInjection.namespace:type_name -> google.protobuf.StringValue
	3, // 2: v1.FaultInjection.revision:type_name -> google.protobuf.StringValue
	4, // 3: v1.FaultInjection.enabled:type_name -> google.protobuf.BoolValue
	5, // 4: v1.FaultInjection.sources:type_name -> v1.Source
	1, // 5: v1.FaultInjection.delayFault:type_name -> v1.DelayFault
	2, // 6: v1.FaultInjection.abortFault:type_name -> v1.AbortFault
	3, // 7: v1.FaultInjection.ctime:type_name -> google.protobuf.StringValue
	3, // 8: v1.FaultInjection.mtime:type_name -> google.protobuf.StringValue
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_fault_injection_proto_init() }
func file_fault_injection_proto_init() {
	if File_fault_injection_proto != nil {
		return
	}
	file_routing_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_fault_injection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultInjection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fault_injection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelayFault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fault_injection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbortFault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fault_injection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fault_injection_proto_goTypes,
		DependencyIndexes: file_fault_injection_proto_depIdxs,
		MessageInfos:      file_fault_injection_proto_msgTypes,
	}.Build()
	File_fault_injection_proto = out.File
	file_fault_injection_proto_rawDesc = nil
	file_fault_injection_proto_goTypes = nil
	file_fault_injection_proto_depIdxs = nil
}
